{"ast":null,"code":"var _jsxFileName = \"/Users/dkburd/Documents/projects/react/react-playground/src/composition/Tooltip.js\";\nimport React from 'react';\nimport './Tooltip.css'; // these are the same: \n// props are a parameter\n// function FunctionComponent(props) {\n//   return <span>{props.children}</span>\n// }\n// props accessed by `this.props`\n// class ClassComponent extends React.Component {\n//   render() {\n//     return <span>{this.props.children}</span>\n//   }\n// }\n// We'll need two sections inside the Tooltip, one for the text to display and the second for the message that appears on a hover. We'll use the children prop for the normal text and a prop called message for the text that will appear.\n// {props.children} - children...of what?\n// function Tooltip(props) {\n//   return (\n//     <span className='Tooltip'>\n//       <span \n//       className='Tooltip-content'\n//       style={{color:props.color}}\n//       >\n//         {props.children}\n//       </span>\n//       <div className='Tooltip-message'>\n//         {props.message}\n//       </div>\n//     </span>\n//   )\n// }\n// class component - basic\n// class TooltipClass extends React.Component {\n//   render() {\n//     return <span />\n//   }\n// }\n// class version of Tooltip example above\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TooltipClass extends React.Component {\n  render() {\n    console.log('Using a class component!');\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Tooltip-content\",\n        style: {\n          color: this.props.color\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tooltip-message\",\n        children: this.props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export the function version\n// export default Tooltip;\n// export the class version\n\n\nTooltipClass.defaultProps = {\n  color: '#01A800' // green\n\n};\nexport default TooltipClass;","map":{"version":3,"sources":["/Users/dkburd/Documents/projects/react/react-playground/src/composition/Tooltip.js"],"names":["React","TooltipClass","Component","render","console","log","props","color","children","message","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAIvCC,EAAAA,MAAM,GAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,SAFT;AAAA,kBAIG,KAAKD,KAAL,CAAWE;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACG,KAAKF,KAAL,CAAWG;AADd;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AApBwC,C,CA0B3C;AACA;AAEA;;;AA7BMR,Y,CACKS,Y,GAAe;AACtBH,EAAAA,KAAK,EAAE,SADe,CACJ;;AADI,C;AA6B1B,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport './Tooltip.css';\n\n// these are the same: \n// props are a parameter\n// function FunctionComponent(props) {\n//   return <span>{props.children}</span>\n// }\n\n// props accessed by `this.props`\n// class ClassComponent extends React.Component {\n//   render() {\n//     return <span>{this.props.children}</span>\n//   }\n// }\n\n\n// We'll need two sections inside the Tooltip, one for the text to display and the second for the message that appears on a hover. We'll use the children prop for the normal text and a prop called message for the text that will appear.\n\n// {props.children} - children...of what?\n// function Tooltip(props) {\n//   return (\n//     <span className='Tooltip'>\n//       <span \n//       className='Tooltip-content'\n//       style={{color:props.color}}\n//       >\n//         {props.children}\n//       </span>\n//       <div className='Tooltip-message'>\n//         {props.message}\n//       </div>\n//     </span>\n//   )\n// }\n\n// class component - basic\n// class TooltipClass extends React.Component {\n//   render() {\n//     return <span />\n//   }\n// }\n\n// class version of Tooltip example above\nclass TooltipClass extends React.Component {\n    static defaultProps = {\n    color: '#01A800', // green\n  };\n    render() {\n    console.log('Using a class component!')\n    console.log(this.props)\n    return (\n      <span className='Tooltip'>\n        <span\n          className='Tooltip-content'\n          style={{ color: this.props.color }}\n        >\n          {this.props.children}\n        </span>\n        <div className='Tooltip-message'>\n          {this.props.message}\n        </div>\n      </span>\n    )\n  }\n}\n\n\n\n\n// export the function version\n// export default Tooltip;\n\n// export the class version\nexport default TooltipClass;"]},"metadata":{},"sourceType":"module"}