{"ast":null,"code":"var _jsxFileName = \"/Users/dkburd/Documents/projects/react/react-playground/src/composition/Tooltip.js\";\nimport React from 'react';\nimport './Tooltip.css'; // these are the same: \n// props are a parameter\n// function FunctionComponent(props) {\n//   return <span>{props.children}</span>\n// }\n// props accessed by `this.props`\n// class ClassComponent extends React.Component {\n//   render() {\n//     return <span>{this.props.children}</span>\n//   }\n// }\n// We'll need two sections inside the Tooltip, one for the text to display and the second for the message that appears on a hover. We'll use the children prop for the normal text and a prop called message for the text that will appear.\n// {props.children} - children...of what?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tooltip(props) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"Tooltip\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Tooltip-content\",\n      style: {\n        color: props.color\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tooltip-message\",\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} // class component - basic\n// class TooltipClass extends React.Component {\n//   render() {\n//     return <span />\n//   }\n// }\n// class version of Tooltip example above\n\n\n_c = Tooltip;\n\nclass TooltipClass extends React.Component {\n  render() {\n    console.log('Using a class component!');\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Tooltip-content\",\n        style: {\n          color: this.props.color\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tooltip-message\",\n        children: this.props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export the function version\n// export default Tooltip;\n// export the class version\n\n\nexport default TooltipClass;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"sources":["/Users/dkburd/Documents/projects/react/react-playground/src/composition/Tooltip.js"],"names":["React","Tooltip","props","color","children","message","TooltipClass","Component","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,sBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA,4BACE;AACA,MAAA,SAAS,EAAC,iBADV;AAEA,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAACD,KAAK,CAACC;AAAb,OAFP;AAAA,gBAIGD,KAAK,CAACE;AAJT;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;;;KAvBSJ,O;;AAwBT,MAAMK,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,SAFT;AAAA,kBAIG,KAAKD,KAAL,CAAWE;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACG,KAAKF,KAAL,CAAWG;AADd;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAjBwC,C,CAuB3C;AACA;AAEA;;;AACA,eAAeC,YAAf","sourcesContent":["import React from 'react';\nimport './Tooltip.css';\n\n// these are the same: \n// props are a parameter\n// function FunctionComponent(props) {\n//   return <span>{props.children}</span>\n// }\n\n// props accessed by `this.props`\n// class ClassComponent extends React.Component {\n//   render() {\n//     return <span>{this.props.children}</span>\n//   }\n// }\n\n\n// We'll need two sections inside the Tooltip, one for the text to display and the second for the message that appears on a hover. We'll use the children prop for the normal text and a prop called message for the text that will appear.\n\n// {props.children} - children...of what?\nfunction Tooltip(props) {\n  return (\n    <span className='Tooltip'>\n      <span \n      className='Tooltip-content'\n      style={{color:props.color}}\n      >\n        {props.children}\n      </span>\n      <div className='Tooltip-message'>\n        {props.message}\n      </div>\n    </span>\n  )\n}\n\n// class component - basic\n// class TooltipClass extends React.Component {\n//   render() {\n//     return <span />\n//   }\n// }\n\n// class version of Tooltip example above\nclass TooltipClass extends React.Component {\n  render() {\n    console.log('Using a class component!')\n    console.log(this.props)\n    return (\n      <span className='Tooltip'>\n        <span\n          className='Tooltip-content'\n          style={{ color: this.props.color }}\n        >\n          {this.props.children}\n        </span>\n        <div className='Tooltip-message'>\n          {this.props.message}\n        </div>\n      </span>\n    )\n  }\n}\n\n\n\n\n// export the function version\n// export default Tooltip;\n\n// export the class version\nexport default TooltipClass;"]},"metadata":{},"sourceType":"module"}