{"ast":null,"code":"var _jsxFileName = \"/Users/dkburd/Documents/projects/react/react-playground/src/state/TheDate.js\";\nimport React from 'react'; // Always add super(props) inside of React class component constructor methods\n//  When we use the extends React.Component syntax, we're building a new blueprint based off of the React.Component class. The super function is used inside classes to reach into the original blueprint. We used super here to repeat the functionality that was defined in the constructor inside the React.Component class\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TheDate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foo: 'foo',\n      hello: 'Hello, world!',\n      list: [1, 2, 3],\n      obj: {\n        nested: 'object',\n        yes: true\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default TheDate;","map":{"version":3,"sources":["/Users/dkburd/Documents/projects/react/react-playground/src/state/TheDate.js"],"names":["React","TheDate","Component","constructor","props","state","foo","hello","list","obj","nested","yes","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,KADM;AAEXC,MAAAA,KAAK,EAAE,eAFI;AAGXC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHK;AAIXC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,GAAG,EAAE;AAAzB;AAJM,KAAb;AAMD;;AACCC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAZmC;;AAiBtC,eAAeX,OAAf","sourcesContent":["import React from 'react';\n\n// Always add super(props) inside of React class component constructor methods\n//  When we use the extends React.Component syntax, we're building a new blueprint based off of the React.Component class. The super function is used inside classes to reach into the original blueprint. We used super here to repeat the functionality that was defined in the constructor inside the React.Component class\n\nclass TheDate extends React.Component {\nconstructor(props) {\n  super(props)\n  this.state = {\n    foo: 'foo',\n    hello: 'Hello, world!',\n    list: [1, 2, 3],\n    obj: { nested: 'object', yes: true },\n  }\n}\n  render() {\n    return <div />\n  }\n}\n\n\n\nexport default TheDate\n"]},"metadata":{},"sourceType":"module"}