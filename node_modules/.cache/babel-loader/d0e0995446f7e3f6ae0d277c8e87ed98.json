{"ast":null,"code":"var _jsxFileName = \"/Users/dkburd/Documents/projects/react/react-playground/src/App.js\";\nimport React, { Component } from 'react';\nimport Split from './composition/Split';\nimport './App.css'; // this works by referencing Split.js items closed bracket \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Split, {\n      className: \"left\",\n      flexBasis: 2,\n      children: [\"the text here is the children\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the content for the left `Split`. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Incidunt ex velit suscipit facere officia?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"I am a child of the split component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Split, {\n      className: \"right\",\n      children: \"I am also a child of the split component. This is the content for the right `Split`. Inventore aliquid cupiditate suscipit repellat. Quaerat quis officiis quam fuga. Aliquid quo possimus id soluta aspernatur.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Split, {\n      text: \"hey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dkburd/Documents/projects/react/react-playground/src/App.js"],"names":["React","Component","Split","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,WAAP,C,CAEA;;;;AACA,SAASC,GAAT,GAAe;AACb,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BAEE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,SAAS,EAAE,CAAnC;AAAA,+DAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAiBJ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG;AAAd;AAAA;AAAA;AAAA;AAAA,YAjBI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;KAxBQA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Split from './composition/Split';\nimport './App.css';\n\n// this works by referencing Split.js items closed bracket \nfunction App() {\n  return (\n    <main className='App'>\n      {/* className is a custom prop */}\n      <Split className='left' flexBasis={2}>\n        the text here is the children\n        <p>\n        This is the content for the left `Split`. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Incidunt ex velit suscipit facere officia?\n        </p>\n        <p>\n          I am a child of the split component\n        </p>\n      </Split>\n      <Split className='right'>\n        I am also a child of the split component. \n        This is the content for the right `Split`. Inventore aliquid cupiditate suscipit repellat. Quaerat quis officiis quam fuga. Aliquid quo possimus id soluta aspernatur.\n      </Split>\n\n{/* this will not show up because - it will error, text is not a child of the split Component, its a custom prop  */}\n<Split text ={\"hey\"}/>\n\n\n    </main>\n  )\n}\n\n\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}